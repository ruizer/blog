(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{361:function(e,s,t){e.exports=t.p+"assets/img/open-window.14a09c97.png"},362:function(e,s,t){e.exports=t.p+"assets/img/message-info.61f5cd55.png"},363:function(e,s,t){e.exports=t.p+"assets/img/after-msg-handle.0e1013ab.png"},391:function(e,s,t){"use strict";t.r(s);var o=t(42),a=Object(o.a)({},(function(){var e=this,s=e.$createElement,o=e._self._c||s;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"利用-postmessage-的骚操作来实现微信网页授权登陆"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#利用-postmessage-的骚操作来实现微信网页授权登陆"}},[e._v("#")]),e._v(" 利用 postMessage 的骚操作来实现微信网页授权登陆")]),e._v(" "),o("blockquote",[o("p",[e._v("这是我很久以前写的文章，如果有什么不对的地方请指出，原文："),o("a",{attrs:{href:"https://ruizer.github.io/2019/07/13/window-post-message-for-wechat-login/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://ruizer.github.io/2019/07/13/window-post-message-for-wechat-login/"),o("OutboundLink")],1)])]),e._v(" "),o("blockquote",[o("p",[e._v("之前对于postMessage并不是特别熟悉，只是看过文档、写过demo。但这次在做微信网页授权登陆的时候，用到了postMessage，用得并不是很顺手，所以想着写篇文章记录一下，并且也重新写了个"),o("a",{attrs:{href:"https://ruizer.github.io/demo/#/post-message",target:"_blank",rel:"noopener noreferrer"}},[e._v("demo"),o("OutboundLink")],1),e._v("，源码："),o("a",{attrs:{href:"https://github.com/ruizer/demo/blob/master/src/views/post-message/post-message.vue",target:"_blank",rel:"noopener noreferrer"}},[e._v("post-message"),o("OutboundLink")],1)])]),e._v(" "),o("h2",{attrs:{id:"postmessage概念"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#postmessage概念"}},[e._v("#")]),e._v(" postMessage概念")]),e._v(" "),o("p",[o("code",[e._v("window.postMessage()")]),e._v(" 方法可以安全地实现跨源通信。通常，对于两个不同页面的脚本，只有当执行它们的页面位于具有相同的协议（通常为"),o("code",[e._v("https")]),e._v("），端口号（"),o("code",[e._v("443")]),e._v("为"),o("code",[e._v("https")]),e._v("的默认值），以及主机  (两个页面的模数 "),o("code",[e._v("Document.domain")]),e._v(" 设置为相同的值) 时，这两个脚本才能相互通信。"),o("code",[e._v("window.postMessage()")]),e._v(" 方法提供了一种受控机制来规避此限制，只要正确的使用，这种方法就很安全。\n")]),e._v(" "),o("p",[o("code",[e._v("window.postMessage()")]),e._v(" 方法被调用时，会在所有页面脚本执行完毕之后（e.g., 在该方法之后设置的事件、之前设置的 "),o("code",[e._v("timeout")]),e._v(" 事件,etc.）向目标窗口派发一个 "),o("code",[e._v("MessageEvent")]),e._v(" 消息。 该   "),o("code",[e._v("MessageEvent")]),e._v(" 消息有四个属性需要注意： "),o("code",[e._v("message")]),e._v(" 属性表示该"),o("code",[e._v("message")]),e._v(" 的类型； "),o("code",[e._v("data")]),e._v(" 属性为 "),o("code",[e._v("window.postMessage")]),e._v(" 的第一个参数；"),o("code",[e._v("origin")]),e._v(" 属性表示调用 "),o("code",[e._v("window.postMessage()")]),e._v(" 方法时调用页面的当前状态； "),o("code",[e._v("source")]),e._v(" 属性记录调用 "),o("code",[e._v("window.postMessage()")]),e._v(" 方法的窗口信息。")]),e._v(" "),o("h2",{attrs:{id:"大体思路"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#大体思路"}},[e._v("#")]),e._v(" 大体思路")]),e._v(" "),o("p",[e._v("做过微信网页授权的人应该都知道，用户扫码过后，微信后台与我们的后台会有一个响应。但对于前后端分离项目，我们的后台只能做重定向的操作才能让前端知道用户使用微信登陆成功了（如果你在前端做定时任务一直刷新，当我没说。再者登陆内嵌存在多个页面中，并且登陆成功后需要获取多个数据，这时候后台直接重定向就不是太方便了。")]),e._v(" "),o("p",[e._v("所以，这时候我们需要一个专门做登陆验证的页面，后台重定向到这个页面，然后利用 "),o("code",[e._v("postMessage")]),e._v(" 进行通信，告诉我们用户微信登陆成功了，可以获取一些数据了")]),e._v(" "),o("h2",{attrs:{id:"父窗口"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#父窗口"}},[e._v("#")]),e._v(" 父窗口")]),e._v(" "),o("blockquote",[o("p",[e._v("网页接入微信登陆的时候，登陆页面即为父窗口。")])]),e._v(" "),o("p",[e._v("首先，当用户点击微信登陆时，使用"),o("code",[e._v("window.open()")]),e._v("打开一个子窗口，并监听message事件，子窗口链接就是微信提供的链接，地址可见"),o("a",{attrs:{href:"https://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&t=resource/res_list&verify=1&id=open1419316505&token=&lang=zh_CN",target:"_blank",rel:"noopener noreferrer"}},[e._v("网站应用微信登录开发指南"),o("OutboundLink")],1),e._v(" "),o("img",{attrs:{src:t(361),alt:"打开子窗口"}})]),e._v(" "),o("p",[e._v("可以看见，图中有个"),o("code",[e._v("setInterval")]),e._v("定时任务，这是为了监听子窗口关闭后清除"),o("code",[e._v("message")]),e._v("监听事件")]),e._v(" "),o("p",[o("code",[e._v("handleMessage")]),e._v("就是消息接收处理函数，它会接收一个参数"),o("code",[e._v("e")]),e._v("，"),o("code",[e._v("e")]),e._v("是一个对象：\n"),o("img",{attrs:{src:t(362),alt:"消息对象"}})]),e._v(" "),o("p",[e._v("一般会用到 "),o("code",[e._v("origin")]),e._v(" 和 "),o("code",[e._v("data")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("origin")]),e._v("是发送的消息源，用来验证消息是从哪个地方发送过来的，一定要验证，若不是你定义的源则不能接收处理这个消息")]),e._v(" "),o("li",[o("code",[e._v("data")]),e._v("是发送的数据，在这里你可以拿到微信登陆重定向页面给你发过来的数据，判断用户是否登陆。\n"),o("img",{attrs:{src:t(363),alt:"接收消息"}})])]),e._v(" "),o("h2",{attrs:{id:"子窗口"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#子窗口"}},[e._v("#")]),e._v(" 子窗口")]),e._v(" "),o("blockquote",[o("p",[e._v("微信二维码页面、重定向页即为子窗口")])]),e._v(" "),o("p",[e._v("当然微信二维码页面我们是做不了任何操作的，因为这是微信内部代码，也不在同个域。但是用户扫码授权登陆后重定向至我们自定义的重定向页，这时候我们可以在重定向页面向父窗口（即登录页）传递信息，父窗口可以根据这些信息知道用户是否登陆了，并进行相应的操作。")]),e._v(" "),o("p",[e._v("什么时候传递信息呢？我们可以把登陆成功信息拼接在重定向地址上面，前端解析地址得到信息后就可以把这些信息传递给父窗口：")]),e._v(" "),o("div",{staticClass:"language- line-numbers-mode"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("// 先解析地址，得到数据，然后使用 window.opener.postMessage 传递数据\nwindow.opener.postMessage(数据, window.location);\n")])]),e._v(" "),o("div",{staticClass:"line-numbers-wrapper"},[o("span",{staticClass:"line-number"},[e._v("1")]),o("br"),o("span",{staticClass:"line-number"},[e._v("2")]),o("br")])]),o("p",[e._v("本文完， 感谢阅读。")])])}),[],!1,null,null,null);s.default=a.exports}}]);